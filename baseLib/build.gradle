plugins {
    id 'com.android.library'
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.2"

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }

    //指定assets路径
    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets']
        }
    }
    //多个渠道编译
    publishNonDefault true
    productFlavors {
        main_beta {
            minSdkVersion 19
            targetSdkVersion 30
            versionCode 1
            versionName "baseLib"
            flavorDimensions "versionCode"
        }

    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'


    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //lib必须库
    implementation 'androidx.annotation:annotation:1.1.0'
    //解析
    implementation 'com.google.code.gson:gson:2.6.2'

    //可选配合配置远程依赖
    implementation files('libs/AsyncHttpEngine.jar')
    implementation files('libs/frescoImage.jar')
    implementation files('libs/glideImage.jar')
    implementation files('libs/OKHttpEngine.jar')
    implementation files('libs/VolleyHttpEngine.jar')
}

//版本发布指令 start
task publishAAR(type: GradleBuild) {
    tasks = ['clean', 'outputAAR']
}

def releaseTime() {
    return new Date().format("yyMMdd", TimeZone.getTimeZone("Asia/Shanghai"))
}

def aarName = "baseLib-main_beta-release.aar"

task outputAAR(type: Copy, dependsOn: ['assembleRelease']) {
    from "build/outputs/aar/" + aarName
    into "build/outputs/"
    include(aarName)
    rename(aarName, project.android.productFlavors.main_beta.versionName + '-' + releaseTime() + '.aar')
}
//版本发布指令  end